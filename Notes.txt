
Added a 'username' field to the 'users' table using migrations.

Added a factory for 'username' in the User factory.

Changed the 'name' field to the 'fullname' field.

Link to an author's posts has been changed from ID to their username.

A 'Category' model along with its migration and factory has been created.

Created the foreign key constraints for category in the post migration table.

Created the relationship between Post and Category models.

Created the Category factory.

Migrations are executed in the order of their corresponding file timestamps within the migration folder.

Additionally, say the "categories" migration file was placed after the "posts" migration file in terms of timestamp. This configuration led to an error when running the migrations, as the "posts" table contained a foreign key referencing the "categories" table. However, Laravel's migration system processed the "posts" migration first, resulting in a constraint violation since the referenced "categories" table had not yet been created. It is important to note that this behavior is specific to databases like MySQL, which strictly enforce foreign key constraints. SQLite, on the other hand, is more lenient and might allow the migration to proceed even if the referenced table does not exist at the time of the migration.

Particularly, in MySQL, the migration tables have to be created in order. Otherwise, when migrating in MySQL, it would not be able to find the categories reference key. And so, rearranging the migration files by putting categories before posts, and only then could the migration be performed.

In other words, SQLite will not generate this problem. Meanwhile, using MySQL will output an error. In that case, the migration files must be reordered.

Post and Category factories have been fixed so that their slug corresponds to the title/name.

This is the command used in Tinker:

App\Models\Post::factory(100)->recycle([Category::factory(3)->create(), User::factory(5)->create()])->create()

There is a rare case where the factory creation will not work. In that case, it may be helpful to dump the autoload by using the following commands:

composer dumpautoload

php artisan optimize:clear

Created a route for displaying posts of a category.
